spring.application.name=auth-service
server.port=8083
eureka.instance.hostname=localhost
eureka.instance.secure-port=${server.port}
eureka.instance.non-secure-port-enabled=false
eureka.instance.secure-port-enabled=true
eureka.instance.home-page-url=https://${eureka.instance.hostname}:${server.port}/
eureka.instance.status-page-url=https://${eureka.instance.hostname}:${server.port}/info
#eureka.instance.health-check-url=https://${eureka.instance.hostName}:${server.port}/health
eureka.instance.secure-virtual-host-name=${spring.application.name}
eureka.client.serviceUrl.defaultZone=https://localhost:8761/eureka/
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://localhost:3306/airtickets
#spring.datasource.username=root
#spring.datasource.password=MySqlPassword123!
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

#server.ssl.enabled=true
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=JKS
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keyStore.jks
# The password used to generate the certificate
server.ssl.key-store-password=demo
## The password used to access the key in the key store
server.ssl.key-password=demo
# The alias mapped to the certificate
server.ssl.key-alias=auth

server.ssl.trust-store-type=JKS
server.ssl.trust-store=classpath:trustStore.jks
server.ssl.trust-store-password=demo